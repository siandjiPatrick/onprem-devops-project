---
# tasks file for r_k8s_install_check_prerequis
# - name: >-
#     Check prerequisites for Kubernetes installation
#   hosts: k8s-cluster
#   gather_facts: true
#   tasks:

- name: Debug linux distribution
  ansible.builtin.debug:
    msg: "Linux distribution: {{ ansible_distribution }}"
- ansible.builtin.command: uname -a
  register: uname_output
- ansible.builtin.debug:
    var: uname_output.stdout

- name: Debug CPU information
  ansible.builtin.debug:
    msg: "CPU information: {{ ansible_processor_vcpus }}"
- name: Debug Host total Memory 
  ansible.builtin.debug:
    msg: "CPU information: {{ ansible_memtotal_mb }} MB"
- name: Debug hostname of the hosts
  ansible.builtin.debug:
    msg: "Hostname: {{ ansible_hostname }}"

- name: >-
    Verify the MAC address and product_uuid are unique for every node
  become: true
  ansible.builtin.shell: |
    echo get the MAC address of the network interfaces
    ip link
    echo get The product_uuid
    cat /sys/class/dmi/id/product_uuid
  register: mac_and_uuid_output
- ansible.builtin.debug:
    msg: "MAC address and product_uuid: {{ mac_and_uuid_output.stdout_lines[4:] }}"

- name: >-
    The default behavior of a kubelet is to fail to start if swap memory is detected on a node. 
    This means that swap should either be disabled or tolerated by kubelet.
    -> show output of swapon --show command.
  become: true
  ansible.builtin.command: swapon --show
  register: ansible_swapinfo
- ansible.builtin.debug:
    msg: "Swap information: {{ ansible_swapinfo }}"

- name: Ensure swap is disabled
  ansible.builtin.command:
    cmd: swapoff -a
  register: ansible_swapinfo
  
- ansible.builtin.debug:
    msg: "Swap disabled successfully"
  when: ansible_swapinfo.rc == 0








# - name: Ensure required packages are installed
#   package:
#     name: "{{ item }}"
#     state: present
#   loop: "{{ packages_to_install }}"
#   tags: install

# - name: Check if swap is disabled
#   command: swapon --show
#   register: swap_status
#   changed_when: false

# - name: Fail if swap is enabled
#   fail:
#     msg: "Swap is enabled. Please disable swap before proceeding."
#   when: swap_status.stdout != ""
#   tags: check_swap

# - name: Ensure required kernel modules are loaded
#   modprobe:
#     name: "{{ item }}"
#     state: present
#   loop:
#     - br_netfilter
#     - overlay
#   tags: kernel_modules